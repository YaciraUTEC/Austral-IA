from austral.gpt_azure import chat_completion
from austral.search_service import buscar_fragmentos

def responder_asistente(pregunta: str) -> str:
    try:
        print(f"\nüîç Recibida pregunta: {pregunta}")
        fragmentos_relevantes = buscar_fragmentos(pregunta)

        if not fragmentos_relevantes:
            print("No se encontraron fragmentos relevantes")
            return "No encontr√© informaci√≥n relevante para responder tu pregunta."

        fragmentos_relevantes = sorted(fragmentos_relevantes, key=lambda x: x.get("score", 0), reverse=True)[:3]
        contexto = "\n\n---\n\n".join(f["texto"] for f in fragmentos_relevantes)

        if not contexto.strip():
            print("‚ö†Ô∏è Fragmentos sin contenido √∫til")
            return "Encontr√© documentos, pero no pude acceder al contenido."

        prompt = f"""
Eres Austral IA, un asistente t√©cnico especializado en mantenimiento industrial y gesti√≥n de proyectos. Tu objetivo es brindar respuestas claras, √∫tiles y profesionales usando exclusivamente el contexto proporcionado. 

Si la informaci√≥n exacta no est√° presente, pero puedes inferirla razonablemente a partir del contenido, hazlo con cuidado y menciona que se trata de una deducci√≥n.

Reglas de comportamiento:

1. Si la respuesta est√° expl√≠cita en los fragmentos, resp√≥ndela tal como est√° (con unidades, valores, tablas, etc.).
2. Si la respuesta no est√° textual pero se puede deducir, hazlo de forma l√≥gica, sin inventar.
3. Si no hay forma razonable de responder, ind√≠calo claramente sin agregar informaci√≥n externa.
4. Para preguntas emocionales, saludos o agradecimientos, responde de forma c√°lida, profesional y emp√°tica.
5. Para tablas, proporciona primero un resumen breve en texto natural y luego una tabla estructurada y dividida con lineas. 

---


CONTEXTO EXTRA√çDO:

{contexto}

---

PREGUNTA DEL USUARIO: {pregunta}
"""

        print("ü§ñ Enviando a GPT...")
        respuesta = chat_completion(prompt)
        print("‚úÖ Respuesta generada")
        return respuesta

    except Exception as e:
        print(f"‚ùå Error: {str(e)}")
        import traceback
        print(traceback.format_exc())
        return "Lo siento, ocurri√≥ un error interno al procesar tu pregunta."
